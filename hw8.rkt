#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 102 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 157 157 250
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 140 212 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1           0 8687 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 196
(6
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname homew"
 #"ork8-finalversion) (read-case-sensitive #t) (teachpacks ()) (htdp-se"
 #"ttings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 27 #";; Anna Yang and Sarah Tong"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Homework 8"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;our wishlist:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; big-bang clauses we think we'll need"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;functions to make:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;world->scene"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;world->world"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;key-handler"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;off-grid?"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;spawn-new"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;move-down"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;move-posn-down"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;player-move"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(7
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101
(8
 #";; Constants/data definitions;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 17 3 42 #"; the width and height of the grid squares"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 46 #"; the height of the game board in grid squares"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 17 3 46 #"; the width of the gram eboard in grid squares"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 3 #")) "
0 0 17 3 24 #"; board height in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"BOARD-WIDTH/PIX"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 3 #")) "
0 0 17 3 23 #"; board width in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 15 #"BOARD-WIDTH/PIX"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;board coordinate system is in grid per square size units"
0 0 24 29 1 #"\n"
0 0 17 3 70
(9
 #";;x and y increase in the right and downwards directions, respective"
 #"ly"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ["
0 0 14 3 5 #"piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"pile"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;a World is a (make-world Piece LoB)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;Interpretation: the world state of our game"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;- piece is the current falling piece"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;- pile is a list of bricks at the bottom of the screen"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;origin is at bottom left at (0,0)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 2 #" ["
0 0 14 3 6 #"center"
0 0 24 3 1 #" "
0 0 14 3 6 #"bricks"
0 0 24 3 3 #"]) "
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;a Piece is a (make-piece Posn LoB)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Interpretation: The current state of the piece"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; - center is a position that we refer to as the center of the piece"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - bricks is the location of the bricks in the piece"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;a ListofBricks (LoB) is a non-empty list of bricks and is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; - (cons Brick empty)"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; - (cons Brick lob)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Interpretation: A non-empty list of bricks"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; - x is the x-coordinate IN THE GRID of the segment"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; - y is the y-coordinate IN THE GRID of the segment"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; [List-of Numbers] (lon) is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; - (cons number lon)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; A Brick is a (make-brick Integer Integer Color)"
0 0 24 29 1 #"\n"
0 0 17 3 69
(10
 #"; Interpretation: A (make-brick x-g y-g c) represents a square brick"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#"; at position (x-g, y-g) in the grid, to be rendered in color c."
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;coordinates for each brick are based on bottom right corner"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; A Direction is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"left\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - \"right\""
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; Interpretation: The direction of movement of the piece"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; A Rotation is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"a\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"s\""
0 0 24 29 1 #"\n"
0 0 17 3 95
(11
 #";;Interpretation: the direction o"
 #"f rotation of the piece, where \"a\" refers to counter clockwise"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";;and \"s\" refers to clockwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 17 3 101
(12
 #";; Templates/Examples ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"wo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-temp"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"wo"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"center-temp"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 8 #"lob-temp"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"lob-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"brick-temp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 8 #"lob-temp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"center-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"brick-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"direction-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"rotation-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;brick examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-8"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-9"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;center examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;piece and lob examples:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";O Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;center of O piece is bottom right corner of top left brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"O1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; I Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;center of I piece is bottom right corner of second brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; L Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;center of L piece is top right corner of the second brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; J Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;center of J piece is top right corner of the third brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; T Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;center of T piece is bottom right corner of top brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Z Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 69
(13
 #";;center of Z piece is bottom right corner of second brick in top ro"
 #"w"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; S Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-S1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;center of S piece is bottom right corner of first brick in top row"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-S1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; One Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"list-One1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; center of One brick piece is bottom right corner of the brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"One1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 14 3 9 #"list-One1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; LongI Pieces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"list-LongI1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-9"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; center of LongI piece is bottom right corner of the second brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"LongI1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 11 #"list-LongI1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;world examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world7"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world8"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 4 #"One1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world9"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"LongI1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 17 3 101
(14
 #";; Producing Pieces  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-O : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71
(15
 #";; makes a O piece at x y position where x y is the center of the pi"
 #"ece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-O"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"O1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-O"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-O"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-I : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71 15 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"I1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-L : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71
(16
 #";; makes a L piece at x y position where x y is the center of the pi"
 #"ece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-L"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"L1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-L"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-L"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-J : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71
(17
 #";; makes a J piece at x y position where x y is the center of the pi"
 #"ece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-J"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"J1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-J"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-J"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-T : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71
(18
 #";; makes a T piece at x y position where x y is the center of the pi"
 #"ece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-T"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-T"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-T"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"orange\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-Z : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 72
(19
 #";; makes a Z piece at x y position where x y is the center of the pi"
 #"ece)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-Z"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-Z"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-Z"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"pink\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; produce-S : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 71
(20
 #";; makes a S piece at x y position where x y is the center of the pi"
 #"ece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-S"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 2 #"S1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-S"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-S"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; produce-One : Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 73
(21
 #";; makes a One piece at x y position where x y is the center of the "
 #"piece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"produce-One"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 4 #"One1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"produce-One"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"produce-One"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; produce-LongI: Natural Natural -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 75
(22
 #";; makes a LoneI piece at x y position where x y is the center of th"
 #"e piece"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"produce-LongI"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 6 #"LongI1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"produce-LongI"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"produce-LongI"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 17 3 101
(23
 #";; Image/scene painting functions;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; world->scene : World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Build an Image of the given World"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 3 #") ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 3 #") ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 6           4 21 2256
(24
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:p"
 #"oint 100 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 20 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0))"
 #" 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 100 0) #(struct:point 100 200) #(struct:point"
 #" 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"10 10 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-po"
 #"int 0 0 10 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:point 1"
 #"00 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 20 10 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0"
 #" 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 100 0) #(struct:point 100 200) #(str"
 #"uct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:p"
 #"ulled-point 0 0 100 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) o"
 #"utline #(struct:pen \"black\" 2 solid round round)))) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulle"
 #"d-point 0 0 100 200 0 0) #(struct:"
 #"pulled-point 0 0 0 200 0 0)) 255 \"white\")))))))))))))))))))))) #(s"
 #"truct:bb 100 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; piece+scene: Piece Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Add Image of the Piece to the given scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #") ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #") ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 2248
(25
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:p"
 #"oint 100 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 200) #"
 #"(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 20 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 100 0) #(struct:point 100 200) #(struct:point 0 "
 #"200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 20 "
 #"10 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"red\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 100 0) #(struct:point 100 200) #(struct:point 0 200)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 30 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) 255 \"red\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(st"
 #"ruct:point 100 200) #(struct:point 0 200)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 100 0 0 0) #(struct:pulled-point 0 0 100 200 0 0) #(struct:pulle"
 #"d-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round"
 #" round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"100 0 0 0) #(struct:pulled-point 0 0 100 200 0 0) #(struct:pulled-po"
 #"int 0 0 0 200 0 0)) 255 \"white\")))))))))))))))))))))) #(struct:bb "
 #"100 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece+scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; lob+scene: lob Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Add Image of lob to the given scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #") ("
0 0 14 3 8 #"br+scene"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #") ("
0 0 14 3 8 #"br+scene"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 2252
(26
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:p"
 #"oint 100 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"pink\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 200) #"
 #"(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 20 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"255 \"pink\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 100 0) #(struct:point 100 200) #(struct:point 0"
 #" 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 20"
 #" 10 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"pink\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 100 0) #(struct:point 100 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 30 10 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"pink\"))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 100 0) "
 #"#(struct:point 100 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 200 0 0) #(struct:p"
 #"ulled-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 100 0 0 0) #(struct:pulled-point 0 0 100 200 0 0) #(struct:pulle"
 #"d-point 0 0 0 200 0 0)) 255 \"white\")))))))))))))))))))))) #(struct"
 #":bb 100 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 8 #"br+scene"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 9 #"lob+scene"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; br+scene : Brick Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; add Bricks to the scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"br+scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"br+scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"br+scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-4"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 1070
(27
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:p"
 #"oint 100 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"0 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"turquoise\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 2"
 #"00) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #"
 #"(struct:pulled-point 0 0 100 200 0 0) #(struct:pulled-point 0 0 0 20"
 #"0 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(str"
 #"uct:pulled-point 0 0 100 200 0 0) #(struct:pulled-point 0 0 0 200 0 "
 #"0)) 255 \"white\")))))))))) #(struct:bb 100 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"br+scene"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; draw-piece : Piece -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; draws a Piece on Background"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-piece"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;draw-lob : lob -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;draws a lob on the Background"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-Z1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"draw-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;draw-brick : Brick -> Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-9"
0 0 24 3 3 #") ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-9"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;draws a Brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;draw-on-grid : Image Number Number Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 76
(28
 #";;given an Image, places it at the x and y cell coordinates on anoth"
 #"er image"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-on-grid"
0 0 24 3 1 #" "
0 0 14 3 4 #"img1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 4 #"img2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"img1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"BOARD-HEIGHT/PIX"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"img2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(29
 #"; In Bounds? -------------------------------------------------------"
 #"---------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";; pile-reach-top? world -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; given a world state, checks if the pile is at the top of the grid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 5 #")))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 17 3 33 #"; lob-reach-top? : lob -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 16 #"brick-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"lob-reach-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; piece-on-top-of-piece? world -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; checks if a piece is on top of another piece in the pile"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; lob-on-top-of-lob? : LoB LoB -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 70
(30
 #";; given a LoB and a LoB, determines if the first LoB is on top of t"
 #"he"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; second LoB"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lob-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob1"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"brick-on-top-of-lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 17 3 39 #"; brick-on-top-of-lob: brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 20 #"brick-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob1"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 19 #"brick-on-top-of-lob"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob1"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; brick-on-top-of-lob? : Brick LoB -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 70
(31
 #";; given a Brick and LoB, determines if the Brick is on top of the L"
 #"oB"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"brick-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"brick-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"brick-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"brick-on-top-of-lob?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"brick-on-top-of-brick?"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #") "
0 0 17 3 48 #"; brick-on-top-of-brick?: Brick Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"on-top-of-multiple-bricks?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 17 3 45 #"; on-top-of-multiple-bricks? : lob -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 22 #"brick-on-top-of-brick?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 26 #"on-top-of-multiple-bricks?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;piece-reach-bottom? : Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 80
(32
 #";; given a Piece, checks if at least one Brick is out of the y axis "
 #"of the board"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"piece-reach-bottom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"piece-reach-bottom?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"piece-reach-bottom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"brick-reach-bottom?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 17 3 39 #"; brick-reach-bottom?: Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lob-reach-bottom?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 17 3 35 #"; lob-reach-bottom?: LoB -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 19 #"brick-reach-bottom?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 17 #"lob-reach-bottom?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;piece-reach-right? : Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 80 32 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"lob-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 18 #"brick-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"lob-reach-right?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;piece-reach-left? : Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 79
(33
 #";;given a Piece, checks if at least one Brick is out of the y axis o"
 #"f the board"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 17 3 34 #"; lob-reach-left? : lob -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 17 #"brick-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"lob-reach-left?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; brick-reach-top?: Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; given a Brick, checks if it is out of the top y axis of the board"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-reach-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; brick-reach-right?: Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; checks if a Brick is past the right boundary of grid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"brick-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"brick-reach-right?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"brick-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; brick-reach-left? Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; checks if a Brick is past the left boundary of grid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"brick-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-6"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"brick-reach-left?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"brick-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 17 3 101
(34
 #";; Respawn/Board Set Up ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; respawn: world -> piece"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; given a world state, generates a new piece at a random x location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 14 3 6 #"piece?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #") "
0 0 14 3 6 #"piece?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #") "
0 0 14 3 6 #"piece?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 17 3 32 #"; random-piece: World -> Natural"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-O"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-I"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-L"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-J"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-T"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-Z"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"produce-S"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 11 #"produce-One"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 13 #"produce-LongI"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; create-new-pile: Piece lob -> lob"
0 0 24 29 1 #"\n"
0 0 17 3 76
(35
 #";; after a collision, creates a new list of bricks which represents "
 #"the pile"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-pile1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"turquoise\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"create-new-pile"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 8 #"ex-pile1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")) "
0 0 14 3 8 #"ex-pile1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"create-new-pile"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-O"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 8 #"ex-pile1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")) "
0 0 14 3 8 #"ex-pile1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"create-new-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; new-world: world -> world"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; after a collision, creates a new world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"current-pile"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 17 3 47 #"; current pile is the pile of the current world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 15 #"create-new-pile"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"current-pile"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 17 3 101
(36
 #";; Piece Motion and World ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 101 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(37
 #";Continuous movement -----------------------------------------------"
 #"---------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";;move-piece-down: piece -> piece"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;continously moves pieces down"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"produce-J"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-posn-down"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 2 #") "
0 0 17 3 29 #";move-posn-down: posn -> posn"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-posn-down"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;move-lob-down: lob -> lob"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;given a lob, moves all bricks down by one"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-brick-down"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 17 3 32 #";move-brick-down: brick -> brick"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"lob"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-brick-down"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"move-lob-down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 7 #")))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(38
 #"; Player Movement --------------------------------------------------"
 #"---------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;player-rotate-piece : Piece Rotation -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 85
(39
 #";;given a piece and a direction, only rotates the piece if it stays "
 #"within boundaries"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))) "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))) "
0 0 19 3 3 #"\"s\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 6 #")))) ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 6 #")))) ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;piece-rotate-ccw : Piece -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;rotate the piece 90 degrees counterclockwise around the center"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 3 #") ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 3 #") ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #") ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;lob-rotate-ccw : Posn lob -> lob"
0 0 24 29 1 #"\n"
0 0 17 3 73
(40
 #";;rotate the list of bricks 90 degrees counterclockwise around the c"
 #"enter"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-O1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-T1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"lob"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"lob-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; brick-rotate-ccw : Posn Brick -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 73
(41
 #"; Rotate the brick _b_ 90 degrees counterclockwise around the center"
 #" _c_."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;piece-rotate-cw : Piece -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;rotate the piece 90 degrees clockwise around the center"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"S1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"J1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #") ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;lob-rotate-cw : Posn lob -> lob"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;rotate the list of bricks 90 degrees clockwise around the center"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-I1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-L1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"lob"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"lob-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; brick-rotate-cw : Posn Brick -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; Rotate the brick _b_ 90 degrees clockwise around the center _c_."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"brick-color"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"brick-color"
0 0 24 3 2 #"  "
0 0 14 3 10 #"ex-brick-7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;player-move-piece: piece Direction -> piece"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;given a piece, moves all bricks in given direction"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"O1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"O1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))) "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))) "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"piece-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 18 #"piece-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"pc"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;player-move-lob: lob Direction -> lob"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;given a lob, moves all bricks in given direction"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-J1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-S1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-S1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"list-S1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"lob"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-move-lob"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;player-move-brick: brick Direction -> brick"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;given a brick, moves its direction down by one"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"brick-reach-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 18 #"brick-reach-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;player-move-posn: Posn Direction -> Posn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cen1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-move-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(42
 #"; Big Bang Stuff ---------------------------------------------------"
 #"---------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;key-handler: World Key-Event -> World"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;handles things when user hits a key on the keyboard"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))) "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"I1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-brick-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 6 #"world4"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world4"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"s\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 6 #"world4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 6 #"world5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"n\""
0 0 24 3 2 #") "
0 0 14 3 6 #"world5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 19 #"piece-reach-bottom?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 1 #"w"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 19 #"player-rotate-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; world->world : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; change the world one step"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->world"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"produce-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"current-pile"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-piece"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 22 #"piece-on-top-of-piece?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 19 #"piece-reach-bottom?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"new-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-piece-down"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-pile"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;main function to run tetris"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->world"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(43
 #";; Exercise 7 ------------------------------------------------------"
 #"---------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; customized-world: World Nat -> World"
0 0 24 29 1 #"\n"
0 0 17 3 90
(44
 #";; given World and a Nat, produces another World state with a random"
 #" piece and random pile"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customized-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customized-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customized-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 6 #"world?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customized-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"respawn-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 15 #"customized-pile"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #")) "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; customized-bricks: Nat -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; given a Nat, creates a brick at a random location"
0 0 24 29 1 #"\n"
0 0 17 3 93
(45
 #";; Note: it is a design choice to only allow a random pile up to row"
 #" 5 because we didn't want"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";; the pile to be too large and take up too much board space"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 6 #"brick?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 17 #"customized-bricks"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 6 #"brick?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 17 #"customized-bricks"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 6 #"brick?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"customized-bricks"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #") "
0 0 17 3 37 #";; customized-brick: Nat Nat -> Brick"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"101"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 6 #")]))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; customized-pile: Nat -> LoB"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; given a Nat creates a LoB that represents a randomized pile"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 15 #"customized-pile"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"list?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 15 #"customized-pile"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"list?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 15 #"customized-pile"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"list?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"customized-pile"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 14 3 17 #"customized-bricks"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"customized-bricks"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 7 #"))]))  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; main2: world Nat -> big-bang"
0 0 24 29 1 #"\n"
0 0 17 3 96
(46
 #";; main accepts num that represents the number of rows n that are al"
 #"lowed to contain some intial"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(47
 #";; bricks and probability which is a Nat between 0-100 that represen"
 #"ts the probability with which"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";; each cell in the bottom n rows contains a brick where n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"main2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customized-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->world"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 15 #"pile-reach-top?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
