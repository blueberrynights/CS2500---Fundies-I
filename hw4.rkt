#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 6352 0 17 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 24 29 1 #"\n"
0 0 26 3 7 #"#reader"
0 0 24 3 1 #"("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"htdp-beginner-reader.ss\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 24 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 24 3 1 #" "
0 0 14 3 9 #"homework4"
0 0 24 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 24 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 24 3 3 #" #("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 24 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 4 #"none"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #" () "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;Anna Yang, Christopher Swagler"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;Homework 4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;Exercise 1"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part a:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"circl"
0 0 24 3 2 #" ["
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 7 #"outline"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;A circl is a (make-circl Natural String String)"
0 0 24 29 1 #"\n"
0 0 17 3 90
(6
 #";;INTERPRETATION: a (make-circl radius color outline) represents a c"
 #"ircle with radius as a"
) 0 0 24 29 1 #"\n"
0 0 17 3 91
(7
 #";;natural number, color as a string and outline as a string stating "
 #"either solid or outline"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(8
 #";;we construct a circl with contructor: (make-circl Natural String S"
 #"tring)"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;make-circl: Natural String String -> circl"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;selector: a way to get the pieces of circl"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;circl-radius: circl -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;circl-color: circl -> String"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;circl-outline: circl -> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;circl? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Template:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"circl-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"circl"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 2 #" ["
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 7 #"outline"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;A rect is a (make-rect Natural Natural String String)"
0 0 24 29 1 #"\n"
0 0 17 3 97
(9
 #";;INTERPRETATION: a (make-rect width height color outline) represent"
 #"s a rectangle with width as a"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(10
 #";;natural number, height as a natural number, color as a string, and"
 #" outline as a string "
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";;stating either solid or outline"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(11
 #";;we construct a rect with constructor: (make-rect Natural Natural S"
 #"tring String)"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";;make-rect: Natural Natural String String -> rect"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;selector: a way to get the pieces of rect"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;rect-width: rect -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;rect-height: rect -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;rect-color: rect -> String"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;rect-outline: rect-> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;rect? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Template:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rect-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"rect-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ["
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;a txt is a (make-txt String Natural String)"
0 0 24 29 1 #"\n"
0 0 17 3 100
(12
 #";;INTERPRETATION: a (make-txt string size color) represents text wit"
 #"h string as a valid string, size"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;as a natural number, and color as a string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;we construct txt with constructor (make-txt String Natural String)"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;make-txt: String Natural String -> txt"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;selector: a way to get the pieces of txt"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;txt-string: txt -> String"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;txt-size: txt -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;txt-color: txt -> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;txt? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"help\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Template:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"txt-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 4 #"...."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;part b"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;a Shape is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; - (make-circl Natural String String)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; - (make-rect Natural Natural String String)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; - (make-txt String Natural String)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(13
 #";;INTERPRETATION: a Shape is either a (make-circl radius color outli"
 #"ne),"
) 0 0 24 29 1 #"\n"
0 0 17 3 101
(14
 #";;(make-rect width height color outline), or (make-txt string size c"
 #"olor), where radius is a Natural,"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(15
 #";;width is a Natural, height is a Natural, size is a Natural, color "
 #"is a String, string as a String,"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";;and outline as a String either \"solid\" or \"outline\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Shape-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"circl?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"circl-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"rect?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"rect-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"txt?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape5"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape6"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape7"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape8"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape9"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;part c"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;change-color : Shape String -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 91
(16
 #";;given a shape and color, produces identical shape with that shape "
 #"and given color instead"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"circl?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 14 3 5 #"color"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"rect?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 14 3 5 #"color"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"txt?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #") "
0 0 14 3 5 #"color"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                          "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;part d"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"2shapes"
0 0 24 3 2 #" ["
0 0 14 3 6 #"shape1"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape2"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;a 2shapes is a (make-2shapes Shape Shape)"
0 0 24 29 1 #"\n"
0 0 17 3 81
(17
 #";;INTERPRETATION: a (make-2shapes shape1 shape2) represents a scene "
 #"with 2 Shapes"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(18
 #";;we construct a 2shapes with constructor: (make-2shapes Shape Shape"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";;make-2shapes : Shape Shape -> 2shapes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;selector: a way to get the pieces of 2shapes"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;2shapes-shape1 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;2shapes-shape2 -> Shape"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;predicate 2shapes? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"2shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"3shapes"
0 0 24 3 2 #" ["
0 0 14 3 6 #"shape1"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape2"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape3"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;a 3shapes is a (make-3shapes Shape Shape Shape)"
0 0 24 29 1 #"\n"
0 0 17 3 88
(19
 #";;INTERPRETATION: a (make-3shapes shape1 shape2 shape3) represents a"
 #" scene with 3 Shapes"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(20
 #";;we construct a 3shapes with constructor: (make-3shapes Shape Shape"
 #" Shape)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;make-3shapes : Shape Shape Shape -> 3shapes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;selector: a way to get the pieces of 3shapes"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;3shapes-shape1 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;3shapes-shape2 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;3shapes-shape3 -> Shape"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;predicate 3shapes? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"3shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"4shapes"
0 0 24 3 2 #" ["
0 0 14 3 6 #"shape1"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape2"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape3"
0 0 24 3 1 #" "
0 0 14 3 6 #"shape4"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;a 4shapes is a (make-4shapes Shape Shape Shape Shape)"
0 0 24 29 1 #"\n"
0 0 17 3 95
(21
 #";;INTERPRETATION: a (make-4shapes shape1 shape2 shape3 shape4) repre"
 #"sents a scene with 4 Shapes"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(22
 #";;we construct a 4shapes with constructor: (make-4shapes Shape Shape"
 #" Shape Shape)"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";;make-4shapes : Shape Shape Shape Shape -> 4shapes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;selector: a way to get the pieces of 4shapes"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;4shapes-shape1 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;4shapes-shape2 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;4shapes-shape3 -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;4shapes-shape4 -> Shape"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;predicate 4shapes? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"4shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;a ShapeScene is one of"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;- 2shapes"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;- 3shapes"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;- 4shapes"
0 0 24 29 1 #"\n"
0 0 17 3 89
(23
 #";;INTERPRETATION: a ShapeScene is either 2shapes, 3shapes, or 4shape"
 #"s, where 2shapes is a"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(24
 #";;(make-2shapes Shape Shape), 3shapes is a (make-3shapes Shape Shape"
 #" Shape), and 4shapes is a"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";;(make-4shapes Shape Shape Shape Shape)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Template:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ShapeScene-temp"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"2shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"2shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"3shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"3shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"4shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"4shapes-temp"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;part e"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;factor->circle : circl Natural -> circl"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;multiplies the radius of the circle by given numeric factor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"factor->circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-circl"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"circl-color"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 3 #") ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"factor->circle"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"factor->circle"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-circl"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"circl-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;factor->rect : rect Natural -> rect"
0 0 24 29 1 #"\n"
0 0 17 3 73
(25
 #";;multiplies the width and heigh of the rectangle by given numeric f"
 #"actor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"factor->rect"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"rect-color"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"factor->rect"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"factor->rect"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"rect-color"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;factor->txt : txt Natural -> txt"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;multiplies the size of the text by given numeric factor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"factor->txt"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"txt-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"factor->txt"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"factor->txt"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 9 #"txt-color"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;determine-shape : Shape Natural -> Shape"
0 0 24 29 1 #"\n"
0 0 17 3 97
(26
 #";;given a shape, determines what shape it is and runs one of the fac"
 #"tor->[Shape] helper functions"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"circl?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 14 #"factor->circle"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"rect?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 12 #"factor->rect"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"txt?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 11 #"factor->txt"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 12 #"factor->rect"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 11 #"factor->txt"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;factor->2shapes : 2shapes Natural -> 2shapes"
0 0 24 29 1 #"\n"
0 0 17 3 80
(27
 #";;given 2shapes and a numeric factor, produces 2shapes multiplied by"
 #" that factor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->2shapes"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 1 #")"
0 0 14 3 6 #"factor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->2shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->2shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-2shapes"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #"("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 1 #"("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;factor->3shapes : 3shapes Natural -> 3shapes"
0 0 24 29 1 #"\n"
0 0 17 3 80
(28
 #";;given 3shapes and a numeric factor, produces 3shapes mulitplied by"
 #" that factor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->3shapes"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->3shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->3shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-3shapes"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;factor->3shapes : 4shapes Natural -> 4shapes"
0 0 24 29 1 #"\n"
0 0 17 3 80
(29
 #";;given 4shapes and a numeric factor, produces 4shapes multiplied by"
 #" that factor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->4shapes"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"factor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->4shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 8 #"make-txt"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factor->4shapes"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-4shapes"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 15 #"determine-shape"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;change-size : ShapeScene Natural -> ShapeScene"
0 0 24 29 1 #"\n"
0 0 17 3 99
(30
 #";;given a ShapeScene and a numeric factor, creates a new ShapeScene "
 #"where the shapes are changed by"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";;the given factor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"2shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factor->2shapes"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"3shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factor->3shapes"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"4shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factor->4shapes"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 6 #"factor"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #")("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factor->3shapes"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factor->4shapes"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part f:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;a Direction is one of"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;- \"clockwise\""
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;- \"counter-clockwise\""
0 0 24 29 1 #"\n"
0 0 17 3 92
(31
 #";;INTERPRETATION: a Direction is either a clockwise rotation or a co"
 #"unter clockwise rotation"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"direction-temp"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"ex-direction1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"ex-direction2"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;2shapes-rotate : 2shapes -> 2shapes"
0 0 24 29 1 #"\n"
0 0 17 3 96
(32
 #";;given a 2shapes, produces a rotated 2shapes, which is identical fo"
 #"r both clockwise and counter"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";;clockwise"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-rotate"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-rotate"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-rotate"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;3shapes-CW: 3shapes -> 3shapes"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;given a 3shapes, produces a clockwise rotated 3shapes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"3shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"3shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"3shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;3shapes-CCW: 3shapes -> 3shapes"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;given a 3shapes, produces a counter clockwise rotated 3shapes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"3shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"3shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"3shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;4shapes-CW: 4shapes -> 4shapes"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;given a 4shapes, produces a clockwise rotated 4shapes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"4shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"4shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"4shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;4shapes-CCW: 4shapes -> 4shapes"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;given a 4shapes, produces a counter clockwise rotated 4shapes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"4shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"4shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"4shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #") ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;rotate-scene : ShapeScene Direction -> ShapeScene"
0 0 24 29 1 #"\n"
0 0 17 3 94
(33
 #";;given a ShapeScene and Direction, produces a ShapeScene that rotat"
 #"es the Shapes in the given"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Direction"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"2shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 14 #"2shapes-rotate"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"3shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 4 #")) ("
0 0 14 3 10 #"3shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"3shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 4 #")) ("
0 0 14 3 11 #"3shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"4shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 4 #")) ("
0 0 14 3 10 #"4shapes-CW"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"4shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 4 #")) ("
0 0 14 3 11 #"4shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-2shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"2shapes-rotate"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-3shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"3shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-4shapes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape4"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 29 1 #"\n"
0 0 24 3 70
(34
 #"                                                                    "
 #"  "
) 0 0 14 3 9 #"ex-shape3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"4shapes-CCW"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part g:"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;circl->img : circl -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;takes a circl and produces an Image of it"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"circl->img"
0 0 24 3 1 #" "
0 0 14 3 3 #"cir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 3 #"cir"
0 0 24 3 3 #") ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 3 #"cir"
0 0 24 3 3 #") ("
0 0 14 3 11 #"circl-color"
0 0 24 3 1 #" "
0 0 14 3 3 #"cir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"circl->img"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"circl->img"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"circl-outline"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 11 #"circl-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"ex-circle2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;rect->img : rect -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;takes a rect and produces an Image of it"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rect->img"
0 0 24 3 1 #" "
0 0 14 3 7 #"rectang"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 7 #"rectang"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 7 #"rectang"
0 0 24 3 3 #") ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 7 #"rectang"
0 0 24 3 3 #") ("
0 0 14 3 10 #"rect-color"
0 0 24 3 1 #" "
0 0 14 3 7 #"rectang"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rect->img"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rect->img"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rect-height"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 12 #"rect-outline"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"rect-color"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-rect2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;txt->img : txt -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;takes a txt and produces an Image of it"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt->img"
0 0 24 3 1 #" "
0 0 14 3 3 #"tex"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 3 #"tex"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 3 #"tex"
0 0 24 3 3 #") ("
0 0 14 3 9 #"txt-color"
0 0 24 3 1 #" "
0 0 14 3 3 #"tex"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt->img"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"txt->img"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt-size"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 9 #"txt-color"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-text2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;shape->img : Shape -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;given a Shape, draws the corresponding Shape as an Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"circl?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 10 #"circl->img"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"rect?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rect->img"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"txt?"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt->img"
0 0 24 3 1 #" "
0 0 14 3 5 #"shape"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rect->img"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 3 #") ("
0 0 14 3 8 #"txt->img"
0 0 24 3 1 #" "
0 0 14 3 9 #"ex-shape3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;2shapes->img : 2shapes -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;given a 2shapes, draws the corresponding Shapes as an Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"2shapes->img"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 24 3 5 #"))) ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"2shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes1"
0 0 24 3 2 #") "
0 6           4 21 1067
(35
 #"(#(struct:overlay #(struct:translate 190 90 #(struct:overlay #(struc"
 #"t:translate 0 5 #(struct:translate 5 5 #(struct:ellipse 10 10 0 255 "
 #"\"red\"))) #(struct:translate 10 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 10 0 0 0) #(struct:pulled-point 0 0 10 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"yellow\"))))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 "
 #"200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) "
 #"#(struct:pulled-point 0 0 400 200 0 0) #(struct:pulled-point 0 0 0 2"
 #"00 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(st"
 #"ruct:pulled-point 0 0 400 200 0 0) #(struct:pulled-point 0 0 0 200 0"
 #" 0)) 255 \"white\")))))))) #(struct:bb 400 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"2shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"2shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-2shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;3shapes->img : 3shapes -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;given a 3shapes, draws the corresponding Shapes as an Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"3shapes->img"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"3shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes1"
0 0 24 3 2 #") "
0 6           4 21 1874
(36
 #"(#(struct:overlay #(struct:translate 184.0 85.0 #(struct:overlay #(s"
 #"truct:translate 11.0 0 #(struct:translate 5 5 #(struct:ellipse 10 10"
 #" 0 255 \"red\"))) #(struct:translate 0 10 #(struct:overlay #(struct:"
 #"translate 0 5.0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"h\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(s"
 #"truct:translate 6.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"e"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 12.0 0.0 #(struct:translate 1.0 5.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 14.0 0.0 #("
 #"struct:translate 1.0 5.0 #(struct:text \"l\" 0 1 \"black\" 10 #f swi"
 #"ss normal normal #f))))) #(struct:translate 16.0 0.0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 22.0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 10 0 0 0) #(struct:pulled-point 0 0 10 20 0 0) #(struct:pulled-p"
 #"oint 0 0 0 20 0 0)) 255 \"yellow\"))))))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point"
 #" 400 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 "
 #"0 0) #(struct:pulled-point 0 0 400 200 0 0) #(struct:pulled-point 0 "
 #"0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round))))"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0)"
 #" #(struct:pulled-point 0 0 400 200 0 0) #(struct:pulled-point 0 0 0 "
 #"200 0 0)) 255 \"white\")))))))) #(struct:bb 400.0 200.0 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"3shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"3shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-3shapes2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;4shapes->img : 4shapes -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;given a 4shapes, draws the corresponding Shapes as an Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"4shapes->img"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 24 3 6 #")))) ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"4shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes1"
0 0 24 3 2 #") "
0 6           4 21 2006
(37
 #"(#(struct:overlay #(struct:translate 179.0 80.0 #(struct:overlay #(s"
 #"truct:translate 11.0 0 #(struct:overlay #(struct:translate 0 5 #(str"
 #"uct:translate 5 5 #(struct:ellipse 10 10 0 255 \"red\"))) #(struct:t"
 #"ranslate 10 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:p"
 #"ulled-point 0 0 10 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 "
 #"\"yellow\"))))) #(struct:translate 0 20 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:translate 10 10 #(struct:ellipse 20 20 0 outlin"
 #"e \"blue\"))) #(struct:translate 20 5.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 3.0 5.0 #(struct:text \"h\" 0 1 \"black\" 10 #f swiss"
 #" normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 3"
 #".0 5.0 #(struct:text \"e\" 0 1 \"black\" 10 #f swiss normal normal #"
 #"f))))) #(struct:translate 12.0 0.0 #(struct:translate 1.0 5.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 14.0 0.0 #(struct:translate 1.0 5.0 #(struct:text \"l\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"16.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 400 0) #(struct:point 400 200) #(struct:point 0 200)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400"
 #" 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 200"
 #" 0 0) #(struct:pulled-point 0 0 0 200 0 0)) 255 \"white\")))))))) #("
 #"struct:bb 400.0 200.0 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"4shapes->img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape4"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 10 #"shape->img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"4shapes-shape3"
0 0 24 3 1 #" "
0 0 14 3 11 #"ex-4shapes2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;draw-scene : ShapeScene -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;given a ShapeScene, draws an Image of the shapes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"2shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 12 #"2shapes->img"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"3shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 12 #"3shapes->img"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"4shapes?"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #") ("
0 0 14 3 12 #"4shapes->img"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene1"
0 0 24 3 2 #") "
0 6           4 21 1067 35 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"3shapes->img"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 14 #"ex-shapescene3"
0 0 24 3 2 #") "
0 6           4 21 1503
(38
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:translate 195.0 90.0 #(struct:ellipse 10 10 0 255 \"red\")"
 #") #(struct:polygon (#(struct:pulled-point 0 0 200.0 80.0 0 0) #(stru"
 #"ct:pulled-point 0 0 210.0 80.0 0 0) #(struct:pulled-point 0 0 210.0 "
 #"100.0 0 0) #(struct:pulled-point "
 #"0 0 200.0 100.0 0 0)) 255 \"yellow\")) #(struct:translate 189.0 110."
 #"0 #(struct:ellipse 20 20 0 outline \"blue\"))) #(struct:translate 20"
 #"2.0 110.0 #(struct:text \"h\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))) #(struct:translate 208.0 110.0 #(struct:text \"e\" 0 1 \"bla"
 #"ck\" 10 #f swiss normal normal #f))) #(struct:translate 212.0 110.0 "
 #"#(struct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))) #("
 #"struct:translate 214.0 110.0 #(struct:text \"l\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))) #(struct:translate 218.0 110.0 #(struct:t"
 #"ext \"o\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 200)"
 #" #(struct:point 0 200)) #(struct:overlay #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(str"
 #"uct:pulled-point 0 0 400 200 0 0) #(struct:pulled-point 0 0 0 200 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round)) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"400 0 0 0) #(struct:pulled-point 0 0 400 200 0 0) #(struct:pulled-po"
 #"int 0 0 0 200 0 0)) 255 \"white\")))) #(struct:bb 400.0 200.0 200.0)"
 #" #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part h:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;key-rotate : Key ShapeScene -> ShapeScene"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;given a Key, determines how to rotate the ShapeScene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"key-rotate"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"rotate-scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"quit?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"finalshapes"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 10 #"shapescene"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 10 #"key-rotate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 5 #"quit?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(39
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;Exercise 2"
0 0 24 29 1 #"\n"
0 0 17 3 97
(40
 #";;Note: since part d assumed all months in a year are 30 days long, "
 #"the previous parts (a-c) have"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";;been changed to reflect this condition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"date"
0 0 24 3 2 #" ["
0 0 14 3 4 #"year"
0 0 24 3 1 #" "
0 0 14 3 5 #"month"
0 0 24 3 1 #" "
0 0 14 3 3 #"day"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;a date is a (make-date Natural Natural Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 95
(41
 #";;INTERPRETATION: a (make-date year month day) represents a date wit"
 #"h year as a 4 digit natural"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(42
 #";;number, month as a number from [1, 12], and day as a number from ["
 #"1, 30]"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(43
 #";;we construct a date with constructor: (make-date Natural Natural N"
 #"atural)"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;make-date: Natural Natural Natural -> date"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;selector: a way to get the pieces of date"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;date-year: date -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;date-month: date -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;date-day: date -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;date? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2020"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2018"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 2 #" ["
0 0 14 3 4 #"hour"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;a time is a (make-time Natural Natural Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 102
(44
 #";;INTERPRETATION: a (make-time hour minute second) represents a time"
 #" with hour as a number from [0,23]"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";;minute as a number from [0,59], and second as a number from [0,59]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(45
 #";;we construct a time with constructor: (make-time Natural Natural N"
 #"atural)"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;make-time: Natural Natural Natural -> time"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;selector: a way to get the pieces of time"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;time-hour: time -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;time-minute: time -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;time-second: time -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;time? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"DateTime"
0 0 24 3 2 #" ["
0 0 14 3 4 #"Date"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;a DateTime is (make-date-time Date Time)"
0 0 24 29 1 #"\n"
0 0 17 3 73
(46
 #";;INTERPRETATION: a (make-date-time Date Time) is a DateTime with Da"
 #"te as"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(47
 #";;(make-date Number Number Number) and Time as a (make-time Number N"
 #"umber Number)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;we construct DateTime with constructor: (make-DateTime Date Time)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;DateTime: Date Time -> DateTIme"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;selector: a way to get the pieces of DateTime"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;DateTime-Date: DateTime -> Date"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;DateTime-Time: DateTime -> Time"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;predicate:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;time? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-DateTime"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date1"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-DateTime"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date2"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime3"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-DateTime"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date3"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-temp"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Date"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"time-temp"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Time"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;part b"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;Date->String : Date -> String"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;formats a given Date into the format \"MM/DD/YYY\" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Date->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #")("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #"("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #"("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #"("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"/\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 4 #"Date"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Date->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date1"
0 0 24 3 1 #")"
0 0 19 3 12 #"\"01/01/1000\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Date->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date2"
0 0 24 3 1 #")"
0 0 19 3 12 #"\"12/30/2020\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Date->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date3"
0 0 24 3 1 #")"
0 0 19 3 12 #"\"08/20/2018\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;TimeMinSec->String : Time -> String"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;formats a given Time into the format \"hh:nn:ss am\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 21 3 2 #"10"
0 0 24 3 2 #")("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 21 3 2 #"10"
0 0 24 3 2 #")("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 21 3 2 #"10"
0 0 24 3 2 #")("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 21 3 2 #"10"
0 0 24 3 2 #")("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time1"
0 0 24 3 1 #")"
0 0 19 3 7 #"\"00:00\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time2"
0 0 24 3 1 #")"
0 0 19 3 7 #"\"59:59\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time3"
0 0 24 3 1 #")"
0 0 19 3 7 #"\"30:28\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time4"
0 0 24 3 1 #")"
0 0 19 3 7 #"\"05:14\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time5"
0 0 24 3 1 #")"
0 0 19 3 7 #"\"30:05\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;Time->String : Time -> String"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"pm\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"pm\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 3 2 #" ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"am\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #"))"
0 0 19 3 3 #"\":\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 18 #"TimeMinSec->String"
0 0 24 3 1 #" "
0 0 14 3 4 #"Time"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"am\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time1"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"00:00:00am\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time2"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"23:59:59pm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time3"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"05:30:28am\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time4"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"13:05:14pm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time5"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"11:30:05am\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;format-date-time : DateTime -> String"
0 0 24 29 1 #"\n"
0 0 17 3 79
(48
 #";;given a DateTime, formats into a String of format \"MM/DD/YYYY hh:"
 #"mm:ss am/pm\""
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Date->String"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Date"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 12 #"Time->String"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Time"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 2 #") "
0 0 19 3 23 #"\"01/01/1000 00:00:00am\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part c:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; A TimeUnit is one of"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; - \"second\""
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; - \"minute\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; - \"hour\""
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;INTERPRETATION: A TimeUnit is either a second as a String"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;minute as a String, or hour as a String"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"timeunit-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"tu"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 24 3 1 #" "
0 0 14 3 2 #"tu"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"minute\""
0 0 24 3 1 #" "
0 0 14 3 2 #"tu"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 24 3 1 #" "
0 0 14 3 2 #"tu"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-timeunit1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-timeunit2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"minute\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-timeunit3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; A DateUnit is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - \"day\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; - \"month\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; - \"year\""
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;INTERPRETATION: A DateUnite is either a day as a String,"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;month as a String, or year as a String"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"dateunit-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"time-delta"
0 0 24 3 2 #" ["
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 8 #"timeunit"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;a time-delta is a (make-time-delta Number TimeUnit)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(49
 #";;INTERPRETATION: a (make-time-delta number timeunit) represents the"
 #" relative time specification"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(50
 #";;we construct a time-delta with constructor (make-time-delta Number"
 #" TimeUnit)"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";;make-time-delta : Number TimeUnit -> time-delta"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;selector: a way to get the pieces of time-delta"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;time-delta-number : time-delta -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;time-delta-timeunit : time-delta -> TimeUnit"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;predicate: time-delta? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-time-delta-1"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-time-delta-2"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 24 3 1 #" "
0 0 21 3 5 #"-1324"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"time-delta-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"td"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 17 #"time-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"td"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 19 #"time-delta-timeunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"td"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"date-delta"
0 0 24 3 2 #" ["
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 8 #"dateunit"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;a date-delta is a (make-date-delta Number DateUnit)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(51
 #";;INTERPRETATION: a (make-date-delta number dateunit) represents the"
 #" relative date specification"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(52
 #";;we construct a date-delta with constructor (make-date-delta Number"
 #" DateUnit)"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";;make-date-delta : Number DateUnit -> date-delta"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;selector: a way to get the pieces of date-delta"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;date-delta-number : date-delta -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;date-delta-timeunit : date-delta -> DateUnit"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;predicate: date-delta? : Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-date-delta-1"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-date-delta-2"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"date-delta-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"dd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 17 #"date-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"dd"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 19 #"date-delta-timeunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"dd"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; A RelativeTime is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - \"now\""
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; - (make-time-delta Number TimeUnit)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; - (make-date-delta Number DateUnit)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(53
 #";;INTERPRETATION: A RelativeTime is either a String \"now\", (make-t"
 #"ime-delta Number TimeUnit), or"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(54
 #";;(make-date-delta Number DateUnit), where \"now\" represents the cu"
 #"rrent time,"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(55
 #";;(make-time-delta Number TimeUnit) represents the relative time to "
 #"now,"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(56
 #";;(make-date-delta Number DateUnit) represents the relative date to "
 #"now."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 11 #"time-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"time-delta-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 11 #"date-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"date-delta-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"now\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime2"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-time-delta-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime3"
0 0 24 3 1 #" "
0 0 14 3 15 #"ex-date-delta-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part d:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;date->sec : Date -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 97
(57
 #";;given a Date, converts the date to seconds as a Number, assuming a"
 #" year as 365 days and a month"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #";;has 30 days"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date->sec"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 8 #"31104000"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 5 #"86400"
0 0 24 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date->sec"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-date1"
0 0 24 3 2 #") "
0 0 21 3 11 #"31106678400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;time->sec : Time -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;given a Time, converts the time to seconds as a Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time->sec"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"3600"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"time-second"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"time->sec"
0 0 24 3 1 #" "
0 0 14 3 8 #"ex-time1"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;datetime->sec : DateTime -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;given a DateTime, converts the time to seconds as a Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"date->sec"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Date"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"time->sec"
0 0 24 3 2 #" ("
0 0 14 3 13 #"DateTime-Time"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;RelativeTime->sec : RelativeTime -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;given a RelativeTime, converts the time to seconds as a Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime->sec"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"time-delta-timeunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 4 #")))("
0 0 14 3 17 #"time-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"minute\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"time-delta-timeunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 4 #")))("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 17 #"time-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"time-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"time-delta-timeunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 4 #")))("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"3600"
0 0 24 3 2 #" ("
0 0 14 3 17 #"time-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"date-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"date-delta-dateunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 4 #")))("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 5 #"86400"
0 0 24 3 2 #" ("
0 0 14 3 17 #"date-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"date-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"date-delta-dateunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #" ("
0 0 14 3 17 #"date-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"date-delta?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 24 3 2 #" ("
0 0 14 3 19 #"date-delta-dateunit"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 8 #"31104000"
0 0 24 3 2 #" ("
0 0 14 3 17 #"date-delta-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime->sec"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime1"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime->sec"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime2"
0 0 24 3 1 #")"
0 0 21 3 4 #"7200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime->sec"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime3"
0 0 24 3 1 #")"
0 0 21 3 9 #"-10368000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;DateTimeRelativeTime : DateTime RelativeTime -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 17 #"relativetime->sec"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 3 #") ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime1"
0 0 24 3 1 #")"
0 0 21 3 11 #"31106678400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;adjust-time: DateTime RelativeTime -> DateTime"
0 0 24 29 1 #"\n"
0 0 17 3 93
(58
 #";;given a DateTime and a RelativeTime, produces a DateTime adjusted "
 #"by the given RelativeTime"
) 0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"adjust-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"make-DateTime"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-date"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 8 #"31104000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 8 #"31104000"
0 0 24 3 2 #") "
0 0 21 3 7 #"2592000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 8 #"31104000"
0 0 24 3 2 #") "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #") "
0 0 21 3 5 #"86400"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-time"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 8 #"31104000"
0 0 24 3 2 #") "
0 0 21 3 7 #"2592000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 5 #"86400"
0 0 24 3 2 #") "
0 0 21 3 4 #"3600"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 2 #") "
0 0 21 3 8 #"31104000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #") "
0 0 21 3 5 #"86400"
0 0 24 3 2 #") "
0 0 21 3 4 #"3600"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 29 1 #"\n"
0 0 24 3 71
(59
 #"                                                                    "
 #"  ("
) 0 0 14 3 21 #"DateTime+RelativeTime"
0 0 24 3 1 #" "
0 0 14 3 2 #"dt"
0 0 24 3 1 #" "
0 0 14 3 2 #"rt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 70 34 0 0 21 3 8 #"31104000"
0 0 24 3 2 #") "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #") "
0 0 21 3 5 #"86400"
0 0 24 3 2 #") "
0 0 21 3 4 #"3600"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"adjust-time"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime1"
0 0 24 3 2 #") "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"adjust-time"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime2"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-DateTime"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2021"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(60
 #"                                                                    "
 #"     ("
) 0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"adjust-time"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime3"
0 0 24 3 1 #" "
0 0 14 3 16 #"ex-relativetime3"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-DateTime"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 24 3 1 #" "
0 0 21 3 4 #"2018"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74 60 0 0 14 3 9 #"make-time"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;part e:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;date-time-diff: DateTime DateTime DateUnit -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 99
(61
 #";;given two DateTimes and a DateUnit, calculates the difference betw"
 #"een the dates in the given unit"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"86400"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 24 3 4 #"))) "
0 0 21 3 7 #"2592000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 24 3 1 #" "
0 0 14 3 2 #"du"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"datetime->sec"
0 0 24 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 24 3 4 #"))) "
0 0 21 3 8 #"31104000"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime2"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit1"
0 0 24 3 2 #") "
0 0 21 3 6 #"367560"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime2"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit2"
0 0 24 3 2 #") "
0 0 21 3 5 #"12252"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime1"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-DateTime2"
0 0 24 3 1 #" "
0 0 14 3 12 #"ex-dateunit3"
0 0 24 3 2 #") "
0 0 21 3 4 #"1021"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 101
(62
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;Exercise 3:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;ExpectsToSee is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - START"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - G"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - O"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; - OO"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; - DD"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"start, expect 'g'\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"expect 'o'\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"expect 'ooo'\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"expect 'd'\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"finished\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";render"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";ExpectToSee -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;Given an EspectsToSee world state, produces the displayed image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 19 3 12 #"\"pale green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 14 #"\"spring green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 19 3 12 #"\"lime green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 19 3 12 #"\"dark green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                 )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 2 #")("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 2 #")("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"pale green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 2 #")("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"spring green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 2 #")("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"lime green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 2 #")("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;key-handler"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";ExpectsToSee KeyEvent -> ExpectsToSee"
0 0 24 29 1 #"\n"
0 0 17 3 102
(63
 #";;Given a key press, produces the next ExpectsToSee World State. The"
 #" desired key presses are (g, o, d)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 1 #"G"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 14 3 5 #"START"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 1 #"O"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 1 #"G"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 2 #"OO"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 1 #"G"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 2 #"OO"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 1 #"G"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #")("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #")) "
0 0 14 3 2 #"DD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 2 #") "
0 0 14 3 2 #"DD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 2 #") "
0 0 14 3 1 #"G"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 2 #") "
0 0 14 3 1 #"O"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 2 #") "
0 0 14 3 1 #"G"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 24 3 2 #") "
0 0 14 3 5 #"START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 2 #") "
0 0 14 3 2 #"OO"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 24 3 2 #") "
0 0 14 3 5 #"START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 2 #") "
0 0 14 3 1 #"G"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 2 #") "
0 0 14 3 2 #"OO"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 24 3 2 #") "
0 0 14 3 1 #"G"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 2 #") "
0 0 14 3 5 #"START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"OO"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 2 #") "
0 0 14 3 2 #"DD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 2 #") "
0 0 14 3 2 #"DD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"DD"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 24 3 2 #") "
0 0 14 3 2 #"DD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 2 #"ws"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 5 #"START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
